{"version":3,"sources":["components/Recipes.js","images/Recipe _header.jpg","components/Header.js","App.js","index.js"],"names":["Recipes","title","calories","image","cuisineType","ingredientLines","dietLabels","dishType","healthLabels","mealType","className","src","width","alt","substring","toUpperCase","concat","toLowerCase","toFixed","length","map","dietLabel","type","label","ingredient","Header","logo","height","App","useState","recipes","setRecipes","inputRef","useRef","useEffect","fetchedRecipes","searchItems","a","fetch","process","response","json","result","console","log","hits","onSubmit","e","preventDefault","current","value","trim","name","ref","placeholder","recipe","person","yield","reactDOM","render","document","getElementById"],"mappings":"8NAwFeA,EArFC,SAAC,GAUV,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,YACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,OACE,gCACE,sBAAKC,UAAU,QAAf,UACE,6BAAKT,IAEL,qBAAKU,IAAKR,EAAOS,MAAM,MAAMC,IAAI,QAEnC,sBAAKH,UAAU,eAAf,UACE,oBAAGA,UAAU,YAAb,0BACgB,IACd,sBAAMA,UAAU,eAAhB,SACGN,EACEU,UAAU,EAAG,GACbC,cACAC,OAAOZ,EAAYU,UAAU,GAAGG,oBAGvC,oBAAGP,UAAU,YAAb,uBACY,sBAAMA,UAAU,MAAhB,SAAuBR,EAASgB,QAAQ,QAEpD,mBAAGR,UAAU,YAAb,0BACA,+BACG,IACAJ,EAAWa,OAAS,EACjBb,EAAWc,KAAI,SAACC,GACd,OAAO,6BAAKA,OAEd,0BAEN,mBAAGX,UAAU,YAAb,uBACA,+BACG,IACAH,EAASa,KAAI,SAACE,GACb,OACE,6BACGA,EACER,UAAU,EAAG,GACbC,cACAC,OAAOM,EAAKR,UAAU,GAAGG,uBAKpC,mBAAGP,UAAU,YAAb,2BACA,oBAAIA,UAAU,qBAAd,SACGF,EAAaY,KAAI,SAACG,GACjB,OAAO,6BAAKA,SAGhB,mBAAGb,UAAU,YAAb,uBACA,6BACGD,EAASW,KAAI,SAACE,GACb,OACE,+BACG,IACAA,EACER,UAAU,EAAG,GACbC,cACAC,OAAOM,EAAKR,UAAU,GAAGG,uBAKpC,mBAAGP,UAAU,YAAb,yBACA,oBAAIA,UAAU,qBAAd,SACGL,EAAgBe,KAAI,SAACI,GACpB,OAAO,oBAAId,UAAU,mBAAd,SAAkCc,gB,OChFtC,MAA0B,2CCW1BC,EARA,WACb,OACE,8BACE,qBAAKd,IAAKe,EAAMb,IAAI,GAAGD,MAAM,OAAOe,OAAO,WCiElCC,G,MAhEH,WACV,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACMC,EAAWC,mBAEjBC,qBAAU,WACRC,EAAe,aACd,IAEH,IAAMA,EAAc,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACEC,MAAM,mCAAD,OACSF,EADT,mBAC+BG,WAD/B,oBACmEA,qCAF1E,cACfC,EADe,gBAIAA,EAASC,OAJT,OAIfC,EAJe,OAKrBC,QAAQC,IAAIF,GACZX,EAAWW,EAAOG,MANG,2CAAH,sDAkBpB,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,aAAf,UACE,uBAAMoC,SAba,SAACC,GACxBA,EAAEC,iBACFL,QAAQC,IAAIZ,EAASiB,QAAQC,OACS,KAAlClB,EAASiB,QAAQC,MAAMC,QACzBhB,EAAeH,EAASiB,QAAQC,OAElClB,EAASiB,QAAQC,MAAQ,IAOaxC,UAAU,cAA5C,UACE,uBACE0C,KAAK,SACL1C,UAAU,aACVY,KAAK,OACL+B,IAAKrB,EACLsB,YAAY,6BAEd,wBAAQ5C,UAAU,gBAAgBY,KAAK,SAAvC,SACE,cAAC,IAAD,SAGHQ,EAAQV,KAAI,SAACmC,GACZ,OACE,cAAC,EAAD,CAEEtD,MAAOsD,EAAOA,OAAOhC,MACrBrB,SAAUqD,EAAOA,OAAOrD,SACxBC,MAAOoD,EAAOA,OAAOpD,MACrBC,YAAamD,EAAOA,OAAOnD,YAAY,GACvCC,gBAAiBkD,EAAOA,OAAOlD,gBAC/BC,WAAYiD,EAAOA,OAAOjD,WAC1BC,SAAUgD,EAAOA,OAAOhD,SACxBC,aAAc+C,EAAOA,OAAO/C,aAC5BC,SAAU8C,EAAOA,OAAO9C,SACxB+C,OAAQD,EAAOA,OAAOE,OAVjBF,EAAOA,OAAOhC,kB,cC/CjCmC,EAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.7fb9ce85.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Recipes.scss\";\n\nconst Recipes = ({\n  title,\n  calories,\n  image,\n  cuisineType,\n  ingredientLines,\n  dietLabels,\n  dishType,\n  healthLabels,\n  mealType,\n}) => {\n  return (\n    <div>\n      <div className=\"title\">\n        <h1>{title}</h1>\n\n        <img src={image} width=\"200\" alt=\"\" />\n      </div>\n      <div className=\"descriptions\">\n        <p className=\"sub-heads\">\n          Cuisine Type:{\" \"}\n          <span className=\"cuisine-type\">\n            {cuisineType\n              .substring(0, 1)\n              .toUpperCase()\n              .concat(cuisineType.substring(1).toLowerCase())}\n          </span>\n        </p>\n        <p className=\"sub-heads\">\n          Calories: <span className=\"cal\">{calories.toFixed(0)}</span>\n        </p>\n        <p className=\"sub-heads\"> Diet Labels</p>\n        <ul>\n          {\" \"}\n          {dietLabels.length > 0\n            ? dietLabels.map((dietLabel) => {\n                return <li>{dietLabel}</li>;\n              })\n            : \"No information found\"}\n        </ul>\n        <p className=\"sub-heads\">Dish Type</p>\n        <ul>\n          {\" \"}\n          {dishType.map((type) => {\n            return (\n              <li>\n                {type\n                  .substring(0, 1)\n                  .toUpperCase()\n                  .concat(type.substring(1).toLowerCase())}\n              </li>\n            );\n          })}\n        </ul>\n        <p className=\"sub-heads\">Health Labels</p>\n        <ul className=\"health-labels-list\">\n          {healthLabels.map((label) => {\n            return <li>{label}</li>;\n          })}\n        </ul>\n        <p className=\"sub-heads\">Meal Type</p>\n        <ul>\n          {mealType.map((type) => {\n            return (\n              <li>\n                {\" \"}\n                {type\n                  .substring(0, 1)\n                  .toUpperCase()\n                  .concat(type.substring(1).toLowerCase())}\n              </li>\n            );\n          })}\n        </ul>\n        <p className=\"sub-heads\">Ingredients</p>\n        <ul className=\"health-labels-list\">\n          {ingredientLines.map((ingredient) => {\n            return <li className=\"ingredients-list\">{ingredient}</li>;\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipes;\n","export default __webpack_public_path__ + \"static/media/Recipe _header.a0885f9a.jpg\";","import React from \"react\";\nimport logo from \"../images/Recipe _header.jpg\";\n\nconst Header = () => {\n  return (\n    <div>\n      <img src={logo} alt=\"\" width=\"100%\" height=\"250\" />\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Recipes from \"./components/Recipes\";\nimport { FaSearch } from \"react-icons/fa\";\nimport Header from \"./components/Header\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const [recipes, setRecipes] = useState([]);\n  const inputRef = useRef();\n\n  useEffect(() => {\n    fetchedRecipes(\"chicken\");\n  }, []);\n\n  const fetchedRecipes = async (searchItems) => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${searchItems}&app_id=${process.env.REACT_APP_ID}&app_key=${process.env.REACT_APP_API_KEY}`\n    );\n    const result = await response.json();\n    console.log(result);\n    setRecipes(result.hits);\n  };\n\n  const searchNewRecipes = (e) => {\n    e.preventDefault();\n    console.log(inputRef.current.value);\n    if (inputRef.current.value.trim() !== \"\") {\n      fetchedRecipes(inputRef.current.value);\n    }\n    inputRef.current.value = \"\";\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container \">\n        <form onSubmit={searchNewRecipes} className=\"search-form\">\n          <input\n            name=\"recipe\"\n            className=\"search-bar\"\n            type=\"text\"\n            ref={inputRef}\n            placeholder=\"Ingredient,dish,keywords\"\n          />\n          <button className=\"search-button\" type=\"submit\">\n            <FaSearch />\n          </button>\n        </form>\n        {recipes.map((recipe) => {\n          return (\n            <Recipes\n              key={recipe.recipe.label}\n              title={recipe.recipe.label}\n              calories={recipe.recipe.calories}\n              image={recipe.recipe.image}\n              cuisineType={recipe.recipe.cuisineType[0]}\n              ingredientLines={recipe.recipe.ingredientLines}\n              dietLabels={recipe.recipe.dietLabels}\n              dishType={recipe.recipe.dishType}\n              healthLabels={recipe.recipe.healthLabels}\n              mealType={recipe.recipe.mealType}\n              person={recipe.recipe.yield}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","\nimport React from \"react\"\nimport App from \"./App.js\"\nimport reactDOM from \"react-dom\"\n\nreactDOM.render(<App/>,document.getElementById(\"root\"))"],"sourceRoot":""}